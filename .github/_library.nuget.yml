
inputs:
  config:
    description: "Build configuration to use, defaults to Release"
    required: false
    default: Release


  
runs:
  using: "ubuntu-latest"
  steps:
    - name: Set config
      run: |
        echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
        echo "SOLUTION_NAME=${GITHUB_REPOSITORY}.sln" >> $GITHUB_ENV
        echo "PROJECT_TO_PACK=${REPOSITORY_NAME#*.}" >> $GITHUB_ENV
        
      
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-dotnet@v4
      name: Setup .NET
      id: setup-dotnet
      with:
        dotnet-version: 8.0.200

    - name: Add Custom NuGet Feed to .NET
      run: dotnet nuget update source --username whenfresh --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name whenfresh.github.com --configfile src/NuGet.config
      shell: bash

    - uses: gittools/actions/gitversion/setup@v1.1.1
      name: Install GitVersion
      inputs:
        versionSpec: '6.x'
        includePrerelease: true
        ignoreFailedSources: true
        
    - uses: gittools/actions/gitversion/execute@v1.1.1
      useConfigFile: true
      configFilePath: GitVersion.yml

    - name: Restore dependencies
      run: dotnet restore "${SOLUTION_NAME}"
      shell: bash

    - name: Build
      run: dotnet build "${SOLUTION_NAME}" --no-restore --configuration ${{ inputs.config }}
      shell: bash

    - name: Test
      run: dotnet test "${SOLUTION_NAME}" --no-build --configuration ${{ inputs.config }}
      shell: bash

    - name: Package
      
      run: dotnet pack "src/Class Libraries/${PROJECT_TO_PACK}/{PROJECT_TO_PACK}.csproj" --no-build --configuration ${{ inputs.config }} /p:OutputPath=/packages -o packages
      shell: bash

    - name: NuGet Push
      run: |
        dotnet nuget push packages/*.nupkg --source gitbot --skip-duplicate --api-key 
      shell: bash