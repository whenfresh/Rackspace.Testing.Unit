
inputs:
  nuget-feed-url:
    description: "NuGet Feed to publish to, defaults to https://{{ github.repository_owner }}/index.json"
    required: false
    default: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

  nuget-feed-name:
    description: "Name of NuGet feed, defaults to github"
    required: false
    default: "whenfresh.github.com"

  config:
    description: "Build configuration to use, defaults to Release"
    required: false
    default: Release

  project-path:
    description: "Path to the project to package. Used in dotnet pack"
    default: "src/Class Libraries/Core/"

  solution-path:
    description: "Path to the solution to restore, test, and build. Used indotnet restore, build, and test."
    required: false
    default: "src/Cavity Core.sln"

  nuget-feed-password:
    description: "Password for NuGet Feed authentication & api key for pushing."
    required: true

  nuget-feed-user:
    description: "Username for NuGet Feed authentication. Defaults to {{ github.repository_owner }}."
    required: false
    default: ${{ github.repository_owner }}

  output-path:
    description: "Path for outputs to be published to. Defaults to {{ github.workspace }}/out"
    required: false
    default: ${{ github.workspace }}/output

runs:
  using: "ubuntu-latest"
  steps:
    - name: Build
      steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-dotnet@v4
      name: Setup .NET
      id: setup-dotnet
      with:
        dotnet-version: 8.0.200

    - name: Add Custom NuGet Feed to .NET
      run: dotnet nuget add source --username gitbot --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/NAMESPACE/index.json"
      shell: bash


    - uses: gittools/actions/gitversion/setup@v1.1.1
      name: Install GitVersion
      id: gitversion
      inputs:
        versionSpec: '6.x'
        includePrerelease: true
        ignoreFailedSources: true
        
    - uses: gittools/actions/gitversion/execute@v1.1.1
      useConfigFile: true
      configFilePath: GitVersion.yml

    - name: Restore dependencies
      run: dotnet restore ${{ inputs.solution-path }}
      shell: bash

    - name: Build
      run: dotnet build ${{ inputs.solution-path }} --no-restore --configuration ${{ inputs.config }}
      shell: bash

    - name: Test
      run: dotnet test ${{ inputs.solution-path }} --no-build --configuration ${{ inputs.config }}
      shell: bash

    - name: Package
      
      run: dotnet pack ${{ inputs.project-path }} --no-build --configuration ${{ inputs.config }} /p:Version={{ steps.outputs.GitVersion_}} /p:OutputPath=${{ inputs.output-path }} -o packages
      shell: bash

    - name: NuGet Push
      run: |
        dotnet nuget push packages/*.nupkg --source gitbot --skip-duplicate --api-key 
      shell: bash